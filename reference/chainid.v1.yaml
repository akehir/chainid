openapi: 3.0.0
info:
  title: chainid
  version: '1.0'
  contact:
    name: ChainId
    url: Chainid.io
    email: indo@chainid.io
  description: Data Model for the chain id project
servers:
  - url: api.chainid.io
paths: {}
components:
  schemas:
    User:
      title: User
      type: object
      description: 'Any user of the system, including credentials.'
      x-examples:
        example-1: {}
      properties:
        id:
          type: string
        person:
          $ref: '#/components/schemas/Person'
        email:
          type: string
      required:
        - id
        - email
    Person:
      title: Person
      type: object
      properties:
        id:
          type: string
      required:
        - id
      description: The representation of an identity of an user.
    Attribute:
      title: Attribute
      type: object
      description: 'The attribute of a person. For instance, for the attribute type "name", the value would be "John".'
      properties:
        id:
          type: string
        value:
          type: string
        attributeType:
          $ref: '#/components/schemas/AttributeType'
        levelOfAssurance:
          $ref: '#/components/schemas/LevelOfAssurance'
        person:
          $ref: '#/components/schemas/Person'
      required:
        - id
        - value
        - attributeType
        - levelOfAssurance
        - person
    AttributeType:
      title: AttributeType
      type: object
      properties:
        id:
          type: string
        label:
          type: string
        description:
          type: string
      required:
        - id
        - label
      description: 'The type of any given attribute, for instance "name", "dateOfBirth", etc.'
    Company:
      title: Company
      type: object
      description: 'The participating company which can request information from persons through a data exchange. In OpenID context, also known as relying party / RP.'
      properties:
        id:
          type: string
        name:
          type: string
        vat:
          type: string
      required:
        - id
        - name
    PersonCompany:
      title: PersonCompany
      type: object
      properties:
        id:
          type: string
        person:
          $ref: '#/components/schemas/Person'
        company:
          $ref: '#/components/schemas/Company'
      required:
        - id
        - person
        - company
      description: The identities linked to a specic company.
    CompanyProfile:
      title: CompanyProfile
      type: object
      description: |
        Data requested by the company.
      properties:
        id:
          type: string
        company:
          $ref: '#/components/schemas/Company'
      required:
        - id
        - company
    DataXChange:
      title: DataXChange
      type: object
      description: ''
      properties:
        id:
          type: string
        person:
          $ref: '#/components/schemas/Person'
        companyProfile:
          $ref: '#/components/schemas/CompanyProfile'
        logDateAdded:
          type: string
        expiryDate:
          type: string
        revokationDate:
          type: string
      required:
        - id
        - person
        - companyProfile
        - logDateAdded
    AttributeDataXChange:
      title: AttributeDataXChange
      type: object
      properties:
        id:
          type: string
        dataxchange:
          $ref: '#/components/schemas/DataXChange'
        attribute:
          $ref: '#/components/schemas/Attribute'
        companyProfileAttributeType:
          $ref: '#/components/schemas/CompanyProfileAttributeType'
      required:
        - id
        - dataxchange
        - attribute
        - companyProfileAttributeType
      description: What the user chooses to share from his/her attributes for a data exchange requested by any company by matching with the company profile.
    CompanyProfileAttributeType:
      title: CompanyProfileAttributeType
      type: object
      description: The attribute type requested by a company for a (potential) data exchange.
      properties:
        id:
          type: string
        profile:
          $ref: '#/components/schemas/CompanyProfile'
        attributeType:
          $ref: '#/components/schemas/AttributeType'
        isOptional:
          type: boolean
          description: ''
        levelOfAssuranceRequired:
          $ref: '#/components/schemas/LevelOfAssurance'
      required:
        - id
        - profile
        - attributeType
        - isOptional
        - levelOfAssuranceRequired
    LevelOfAssurance:
      title: LevelOfAssurance
      type: object
      properties:
        id:
          type: integer
          description: ''
        name:
          type: string
        description:
          type: string
      required:
        - id
        - name
      description: "The level of assurance being requested or provided. ID is an integer since it's an enum, and you can specify that you need at least a level of assurance of {x}, where higher provided LoA's would still be ok."
  securitySchemes: {}
